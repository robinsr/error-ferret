---
export const prerender = false;


import '@/styles/global.css';
import { CODE_PLACEHOLDER, SUPPORTED_LANGUAGES, REVIEW_FOCUS_OPTIONS } from '@/constants';
import { generateFeedback } from '@/services/openai/feedback';
import type { FeedbackItem as FeedbackItemType } from '@/types';
import Layout from '@/layouts/Layout.astro';
import Section from '@/components/Section.astro';
import Features from '@/components/Features.astro';
import Header from '@/components/Header.astro';
import SelectInput from '@/components/SelectInput.astro';
import InputLabel from '@/components/InputLabel.astro';
import TextareaInput from '@/components/TextareaInput.astro';
import SubmitButton from '@/components/SubmitButton.astro';
import Feedback from '@/components/Feedback.astro';




let code = '';
let language = 'auto-detected';
let focus = 'general';
let error = '';
let feedbackItems: FeedbackItemType[] = [];

if (Astro.request.method === 'POST') {
  const formData = await Astro.request.formData();

  code = formData.get('code') as string;
  language = formData.get('language') as string;
  focus = formData.get('focus') as string;

  console.log('POST data:', { code, language, focus });

  try {
    feedbackItems = await generateFeedback(code, language, focus);
  } catch (e) {
    error = e instanceof Error ? e.message : 'An unknown error occurred';
  }
}

const hasFeedbackItems = feedbackItems.length > 0;

---

<Layout>
  <div class="min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-4xl mx-auto">
      <Header />

      <!-- Main Form -->
       <Section title="Submit Code for Review" description="Paste your code below and get instant feedback" colorScheme="blue">

        <form id="reviewForm" method="POST" class="p-8 space-y-6">
          <!-- Code Input Section -->
          <div>
            <InputLabel name="code" label="Code to Review" />

            <div class="relative">
              <TextareaInput name="code" label="Code to Review" content={code} placeholder={CODE_PLACEHOLDER} />

              <!-- Pseudo-console traffic light buttons -->
              <div class="absolute top-3 right-3">
                <div class="flex space-x-1">
                  <div class="w-3 h-3 rounded-full bg-red-400"></div>
                  <div class="w-3 h-3 rounded-full bg-yellow-400"></div>
                  <div class="w-3 h-3 rounded-full bg-green-400"></div>
                </div>
              </div>
            </div>

            <p class="mt-2 text-sm text-gray-500">
              Supports all major programming languages. The AI will analyze your code and provide detailed feedback.
            </p>
          </div>

          <!-- Language and Focus Selection -->
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <SelectInput options={SUPPORTED_LANGUAGES} label="Programming Language (Optional)" name="language" selectedValue={language} />
            <SelectInput options={REVIEW_FOCUS_OPTIONS} label="Review Focus (Optional)" name="focus" selectedValue={focus} />
          </div>

          <div class="flex items-center justify-center pt-4">
            <SubmitButton />
          </div>
        </form>
      </Section>

      {hasFeedbackItems && (
        <Feedback items={feedbackItems} />
      )}

      <!-- Loading Overlay -->
      <div id="loadingOverlay" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
        <div class="bg-white rounded-2xl p-8 max-w-md mx-4 text-center">
          <div class="animate-spin rounded-full h-16 w-16 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <h3 class="text-xl font-semibold text-gray-900 mb-2">Processing Your Code</h3>
          <p class="text-gray-600">Please wait while AI analyzes your code. This may take up to 10 seconds...</p>
        </div>
      </div>

    </div>
  </div>
</Layout>

<script>
  const form = document.getElementById('reviewForm');
  const submitButton = document.getElementById('submitButton') as HTMLButtonElement;
  const buttonText = document.getElementById('buttonText');
  const loadingOverlay = document.getElementById('loadingOverlay');

  if (form && submitButton && buttonText && loadingOverlay) {
    form.addEventListener('submit', function(e) {

      // Allow form submission
      //e.preventDefault();

      // Show loading state
      submitButton.disabled = true;
      buttonText.textContent = 'Processing...';
      loadingOverlay.classList.remove('hidden');

      // // Submit the form
      // const formData = new FormData(this as HTMLFormElement);

      // fetch('/api/submit-review', {
      //   method: 'POST',
      //   body: formData
      // })
      // .then(response => {
      //   if (response.redirected) {
      //     // Redirect to the review page
      //     window.location.href = response.url;
      //   } else {
      //     throw new Error('Unexpected response');
      //   }
      // })
      // .catch(error => {
      //   console.error('Error:', error);
      //   // Reset button state
      //   submitButton.disabled = false;
      //   buttonText.textContent = 'Analyze Code with AI';
      //   loadingOverlay.classList.add('hidden');
      //   alert('An error occurred. Please try again.');
      // });
    });
  }
</script>
