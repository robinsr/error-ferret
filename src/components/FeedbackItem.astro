---
import type { FeedbackItem } from '@/types';
import { Info } from '@lucide/astro';
import FeedbackContextLine from './FeedbackContextLine.astro';

interface Props {
  feedbackItem: FeedbackItem;
}


const { lineNum, columnNum, code, contextLines, feedback } = Astro.props.feedbackItem;
---

<div class="feedback-item bg-white border border-gray-200 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200 mb-6 mx-4">
  <!-- Header with line info -->
  <div class="flex items-center gap-3 px-4 py-3 bg-gray-50 border-b border-gray-200 rounded-t-lg">
    <div class="flex items-center gap-2">
      <Info class="w-4 h-4 text-gray-500" />
      <span class="text-sm font-medium text-gray-700">Line {lineNum}</span>
    </div>
  </div>

  <!-- Code section -->
  <div class="relative">
    <div class="overflow-x-auto">
      <div class="min-w-full bg-gray-900 text-gray-100 font-mono text-sm">
        {contextLines.map(ctxLine => (
          <FeedbackContextLine
            lineNum={ctxLine.lineNum}
            code={ctxLine.code}
            columnNum={columnNum}
            isIssueLine={ctxLine.lineNum === lineNum}
          />
        ))}
      </div>
    </div>
  </div>

  <!-- Feedback section -->
  <div class="px-4 py-4 bg-blue-50 border-t border-blue-200 rounded-b-lg">
    <div class="flex justify-center items-center gap-3">
      <!-- Error Ferret Avatar -->
      <div class="flex-shrink-0">
        <img
          src="/images/ferret_avatar.jpg"
          alt="Error Ferret"
          class="w-12 h-12 rounded-full border-2 border-blue-200 shadow-sm"
        />
      </div>

      <!-- Feedback text -->
      <div class="flex-1 min-w-0">
        <p class="text-base text-gray-800 leading-relaxed">{feedback}</p>
      </div>
    </div>
  </div>
</div>