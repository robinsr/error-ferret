---

interface Props {
  lineNum: number;
  code: string;
  columnNum?: number;
  isIssueLine?: boolean;
}

const { lineNum, code, columnNum = 0, isIssueLine = false } = Astro.props;
---

{isIssueLine ? (
  <div class="group flex transition-colors duration-150 bg-red-900/20 border-l-2 border-l-red-500">
    <div class="flex-shrink-0 w-12 px-3 py-1 text-right border-r border-gray-700 select-none text-red-400 font-medium">
      {lineNum}
    </div>
    <div class="flex-1 px-3 py-1 min-w-0">
      <span class="whitespace-pre">{code}</span>

      {columnNum > 1 && (
        <span class="inline-block ml-1 text-red-400">
          {Array.from({ length: columnNum - 1 }, () => ' ').join('')}â†‘
        </span>
      )}
    </div>
  </div>
) : (
  <div class="group flex transition-colors duration-150 hover:bg-gray-800">
    <div class="flex-shrink-0 w-12 px-3 py-1 text-right border-r border-gray-700 select-none text-gray-500">
      {lineNum}
    </div>
    <div class="flex-1 px-3 py-1 min-w-0">
      <span class="whitespace-pre">{code}</span>
    </div>
  </div>
)}
